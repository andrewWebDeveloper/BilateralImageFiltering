# -*- coding: utf-8 -*-
"""task 1 Bilateral image.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gVEhsIppH8b88tKlEbpEJaD0iC6On5MQ
"""

import matplotlib.pyplot as plt
import cv2

image1 = cv2.imread("/content/Z1067.jpg",0)
image2 = cv2.imread("/content/Z452.jpg",0)
image3 = cv2.imread("/content/Z555.jpg",0)
image4 = cv2.imread("/content/Z941.jpg",0)
image5 = cv2.imread("/content/Z979.jpg",0)

import cv2
import numpy

def gaussian(x,sigma):
    return (1.0/(2*numpy.pi*(sigma**2)))*numpy.exp(-(x**2)/(2*(sigma**2)))

def distance(x1,y1,x2,y2):
    return numpy.sqrt(numpy.abs((x1-x2)**2-(y1-y2)**2))

def bilateral_filter(image, diameter, sigma_i, sigma_s):
    new_image = numpy.zeros(image.shape)

    for row in range(len(image)):
        for col in range(len(image[0])):
            wp_total = 0
            filtered_image = 0
            for k in range(diameter):
                for l in range(diameter):
                    filtered_image = (filtered_image) + (image[int(n_x)][int(n_y)] * wp)
                    wp_total = wp_total + wp
            filtered_image = filtered_image // wp_total
            new_image[row][col] = int(numpy.round(filtered_image))
    return new_image

plt.figure(figsize=(18, 18))
filtered_image_OpenCV1 = cv2.bilateralFilter(image1, 7, 20.0, 20.0)

plt.subplot(133),plt.imshow(filtered_image_OpenCV1),plt.title('Bilateral Filtering')
plt.show()

plt.figure(figsize=(18, 18))
filtered_image_OpenCV2 = cv2.bilateralFilter(image2, 7, 20.0, 20.0)
plt.subplot(133),plt.imshow(filtered_image_OpenCV2),plt.title('Bilateral Filtering')
plt.show()

plt.figure(figsize=(18, 18))
filtered_image_OpenCV3 = cv2.bilateralFilter(image3, 7, 20.0, 20.0)
plt.subplot(133),plt.imshow(filtered_image_OpenCV3),plt.title('Bilateral Filtering')
plt.show()

plt.figure(figsize=(18, 18))
filtered_image_OpenCV4 = cv2.bilateralFilter(image4, 7, 20.0, 20.0)
plt.subplot(133),plt.imshow(filtered_image_OpenCV4),plt.title('Bilateral Filtering')
plt.show()

plt.figure(figsize=(18, 18))
filtered_image_OpenCV5 = cv2.bilateralFilter(image5, 7, 20.0, 20.0)
plt.subplot(133),plt.imshow(filtered_image_OpenCV5),plt.title('Bilateral Filtering')
plt.show()